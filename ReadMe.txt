[베이스]
https://start.spring.io/
위 사이트에서 기본적인 설정을 통한 프로젝트의 프레임을 제작할 수 있다
메이븐보다 그레이들이 추세가 되어가기에 현재 프로젝트는 그레이들을 사용한다

[설정]
스프링을 위해 인텔리제이에게 8080을 부여, 오라클 MySql의 포트를 8080에서 8081로 변경
gradle의 컴파일러를 인텔리제이로 바꾸어 그레이들을 통해서 컴파일할 때의 속도를 개선 하였음

[H2 DataBase]
작고 가벼우며, 교육용 및 테스트용으로 좋은 데이터베이스이다
추가로 웹에서 GUI페이지를 지원한다
 * JDBC URL : jdbc:h2:tcp://localhost/~/test
 - 브라우저와 직접접근을 동시에 할 시 충돌을 피하기 위해 소켓을 통해서 접속하도록 한다

[추가설명]
스프링 부트는 톰캣을 내장한다
main의 resources - static은 정적 페이지를 두는데 사용하는 디렉토리이다
스프링 사이트 구동 방법 : main-java에 있는 메인 파일의 메인 메소드 좌측에 초록색 Run아이콘이 있다. 해당 아이콘을 누르면 콘솔에
                       스프링 구동창이 뜨고, 이후 톰캣이 열린더ㅏ
index.html탐색 : 스프링은 시작 후 static폴더에서 우선 적으로 index페이지를 검색하며, 이후 발견하지 못하면 추가적으로 찾아다닌다
일반 Html과 달리 동작부분에서 변경이 발생하면, 웹을 재부팅해야한다
테스트 패키지는 현업에서도 개발자 본인만 확인하므로 '테스트'시, 변수명이나 메소드의 이름을 한글로 작성하기도 한다
어노테이션을 통해 스프링빈에 자동으로 등록을 해주는데, 이는 어노테이션 스트링 부트 어플리케이션의 패키지 이하에서만 찾아서 등록한다
 - 모든 어노테이션을 지우고 SpringConfig와 같은 파일을 만들어, 직접 Bean을 수동등록을 해줄 수 있다.
HTML파일 중간에 태그에 th라는 옵션이 보일것이다. 이는 타임리프의 기능으로, 여러 동작을 지원하여, 코드를 간결하게 해준다

[파일]
 build.gradle
  해당 파일은 현재 프로젝트에 대해 명시하고 있는 파일로, 의존성에 대해서도 명시하고 있다
  자세한 설명은 해당 파일 참조

 .gitignore
  깃에 관한 설정을 명시한 파일

[빌드방법]  * 테스트코드는 빌드에서 제외됨
1. 프로젝트가 있는 파일에서 콘솔실행
2. gradlew build 입력 / gradlew clean build: 빌드 삭제
3. build파일 생성 됨
4. build/libs 안에 프로젝트명을 가진 jar파일이 있다. 해당 파일을 콘솔에서 실행시 Spring이 실행 된다 : java -jar 파일명 을 통해 jar파일을 실행할 수 있다

[단축키 팁]
1. Ctrl + Alt + Enter = 뒷 부분 자동완성(입력이 필요없이 닫기만 필요할 경우)
2. Alt + Enter = Eclips의 Ctrl + Enter
3. 변수에 커서 올린 후 Shift + F6를 통해서 변수명을 변경하면 같은 변수을 알아서 바꿔준다(범위도 눈치껏 지정함)
4. 'Ctrl + Alt + M : Extract Mehod -> 범위지정 -> 이름지정'을 통해서 원하는 과정을 메소드로 분리할 수 있다 // 현재 해당 단축키가 불능으로, Ctrl + Alt + Shift + T를 이용한다
5. 'Ctrl + Shift + T'를 통해서 현재 띄운 파일에 대한 테스트 페키지를 자동으로 생성할 수 있다 : 생성창에서 테스트를 원하는 메소드만 따로 체크가 가능하다
6. 'Alt + Insert'는 게터/세터/생성자를 만들어주는 단축키 : 어떠한 것을 만들지 설정해야함
7. 'Ctrl + Alt + Insert'로 빠른 파일 생성이 가능하다
